<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
    <version>5.0</version>
    <date>2020-08-31T06:07:50Z</date>
    <groups>
        <group>
            <name>Templates</name>
        </group>
    </groups>
    <templates>
        <template>
            <template>Cloudwatch Template</template>
            <name>Cloudwatch Template</name>
            <groups>
                <group>
                    <name>Templates</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>CPU</name>
                </application>
                <application>
                    <name>ELB</name>
                </application>
                <application>
                    <name>ELBv2</name>
                </application>
                <application>
                    <name>EMR</name>
                </application>
                <application>
                    <name>Lambda</name>
                </application>
                <application>
                    <name>RDS CPU</name>
                </application>
                <application>
                    <name>RDS Storage</name>
                </application>
                <application>
                    <name>S3</name>
                </application>
                <application>
                    <name>System health</name>
                </application>
            </applications>
            <discovery_rules>
                <discovery_rule>
                    <name>EC2 Discovery</name>
                    <type>EXTERNAL</type>
                    <key>aws.discovery[ec2,{$REGION},{$ACCOUNT}]</key>
                    <delay>300</delay>
                    <lifetime>0</lifetime>
                    <item_prototypes>
                        <item_prototype>
                            <name>CPU Usage {#NAME}</name>
                            <type>EXTERNAL</type>
                            <key>cloudwatch.metric[600,CPUUtilization,AWS/EC2,Average,{$REGION},InstanceId={#INSTANCE_ID},{$ACCOUNT}]</key>
                            <delay>600</delay>
                            <value_type>FLOAT</value_type>
                            <units>%</units>
                            <applications>
                                <application>
                                    <name>CPU</name>
                                </application>
                            </applications>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{last()}&gt;80</expression>
                                    <name>EC2: {#NAME}: High CPU usage</name>
                                    <status>DISABLED</status>
                                    <priority>WARNING</priority>
                                    <description>{ITEM.VALUE}</description>
                                    <dependencies>
                                        <dependency>
                                            <name>EC2: {#NAME}: High CPU usage for last 60 min</name>
                                            <expression>{Cloudwatch Template:cloudwatch.metric[600,CPUUtilization,AWS/EC2,Average,{$REGION},InstanceId={#INSTANCE_ID},{$ACCOUNT}].avg(60m)}&gt;90</expression>
                                        </dependency>
                                    </dependencies>
                                </trigger_prototype>
                                <trigger_prototype>
                                    <expression>{avg(60m)}&gt;90</expression>
                                    <name>EC2: {#NAME}: High CPU usage for last 60 min</name>
                                    <priority>AVERAGE</priority>
                                    <description>{ITEM.VALUE}</description>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>Instance health {#NAME}</name>
                            <type>EXTERNAL</type>
                            <key>cloudwatch.metric[600,StatusCheckFailed_Instance,AWS/EC2,Maximum,{$REGION},InstanceId={#INSTANCE_ID},{$ACCOUNT}]</key>
                            <delay>300</delay>
                            <value_type>FLOAT</value_type>
                            <units>fail(s)</units>
                            <applications>
                                <application>
                                    <name>System health</name>
                                </application>
                            </applications>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{min(#3)}&gt;0</expression>
                                    <name>EC2: Instance fail on {#NAME}</name>
                                    <priority>HIGH</priority>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>Hypervisor health {#NAME}</name>
                            <type>EXTERNAL</type>
                            <key>cloudwatch.metric[600,StatusCheckFailed_System,AWS/EC2,Maximum,{$REGION},InstanceId={#INSTANCE_ID},{$ACCOUNT}]</key>
                            <delay>600</delay>
                            <value_type>FLOAT</value_type>
                            <units>fail(s)</units>
                            <applications>
                                <application>
                                    <name>System health</name>
                                </application>
                            </applications>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{last()}&gt;0</expression>
                                    <name>EC2: Hypervisor fail on {#NAME}</name>
                                    <priority>DISASTER</priority>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                    </item_prototypes>
                    <trigger_prototypes>
                        <trigger_prototype>
                            <expression>{Cloudwatch Template:cloudwatch.metric[600,CPUUtilization,AWS/EC2,Average,{$REGION},InstanceId={#INSTANCE_ID},{$ACCOUNT}].last()}=-1 or {Cloudwatch Template:cloudwatch.metric[600,StatusCheckFailed_System,AWS/EC2,Maximum,{$REGION},InstanceId={#INSTANCE_ID},{$ACCOUNT}].last()}=-1 or {Cloudwatch Template:cloudwatch.metric[600,StatusCheckFailed_Instance,AWS/EC2,Maximum,{$REGION},InstanceId={#INSTANCE_ID},{$ACCOUNT}].last()}=-1</expression>
                            <name>EC2: No datapoints for {#NAME}</name>
                            <status>DISABLED</status>
                            <priority>INFO</priority>
                            <description>1. Your item is incorrectly configured (dimension, namespace, metric name could be wrong)&#13;
                                2. Instance was terminated and this item will disappear after next discovery</description>
                        </trigger_prototype>
                    </trigger_prototypes>
                </discovery_rule>
                <discovery_rule>
                    <name>ELB Discovery</name>
                    <type>EXTERNAL</type>
                    <key>aws.discovery[elb,{$REGION},{$ACCOUNT}]</key>
                    <delay>3600</delay>
                    <lifetime>0</lifetime>
                    <item_prototypes>
                        <item_prototype>
                            <name>{#BALANCER_NAME} UnHealthyHostCount</name>
                            <type>EXTERNAL</type>
                            <key>cloudwatch.metric[600,UnHealthyHostCount,AWS/ELB,Maximum,{$REGION},LoadBalancerName={#BALANCER_NAME},{$ACCOUNT}]</key>
                            <delay>300</delay>
                            <history>30d</history>
                            <trends>60d</trends>
                            <value_type>FLOAT</value_type>
                            <units>hosts</units>
                            <applications>
                                <application>
                                    <name>ELB</name>
                                </application>
                            </applications>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{min(#3)}&gt;0</expression>
                                    <name>ELB: {#BALANCER_NAME} unhealthy nodes</name>
                                    <priority>HIGH</priority>
                                    <description>{ITEM.VALUE}</description>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>{#BALANCER_NAME} active instances</name>
                            <type>CALCULATED</type>
                            <key>instances[{#BALANCER_NAME}]</key>
                            <delay>1800</delay>
                            <history>30d</history>
                            <trends>60d</trends>
                            <params>{#INSTANCES_COUNT}</params>
                            <applications>
                                <application>
                                    <name>ELB</name>
                                </application>
                            </applications>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{last()}=0</expression>
                                    <name>ELB: {#BALANCER_NAME} has no active instances</name>
                                    <priority>INFO</priority>
                                    <description>This might be due to degraded instances or balancer being inactive.</description>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                    </item_prototypes>
                </discovery_rule>
                <discovery_rule>
                    <name>ELBv2 Discovery</name>
                    <type>EXTERNAL</type>
                    <key>aws.discovery[elbv2,{$REGION},{$ACCOUNT}]</key>
                    <delay>3600</delay>
                    <lifetime>0</lifetime>
                    <description>AWS Application Load Balancer (or ELB v2) discovery rules.&#13;
                        &#13;
                        https://docs.aws.amazon.com/elasticloadbalancing/latest/application/introduction.html</description>
                    <item_prototypes>
                        <item_prototype>
                            <name>ELBv2: {#TARGET_GROUP_LOAD_BALANCER_NAME} {#TARGET_GROUP_NAME} UnHealthyHostCount</name>
                            <type>EXTERNAL</type>
                            <key>cloudwatch.metric[120,UnHealthyHostCount,AWS/ApplicationELB,Maximum,{$REGION},&quot;LoadBalancer={#TARGET_GROUP_LOAD_BALANCER_ARN},TargetGroup={#TARGET_GROUP_ARN}&quot;,{$ACCOUNT}]</key>
                            <delay>120</delay>
                            <history>30d</history>
                            <trends>60d</trends>
                            <value_type>FLOAT</value_type>
                            <units>hosts</units>
                            <applications>
                                <application>
                                    <name>ELBv2</name>
                                </application>
                            </applications>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{last()}&gt;0</expression>
                                    <name>ELBv2: {#TARGET_GROUP_LOAD_BALANCER_NAME} target group {#TARGET_GROUP_NAME} unhealthy nodes</name>
                                    <priority>HIGH</priority>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>ELBv2: {#TARGET_GROUP_LOAD_BALANCER_NAME} target group {#TARGET_GROUP_NAME} total targets</name>
                            <type>CALCULATED</type>
                            <key>instances[{#TARGET_GROUP_LOAD_BALANCER_NAME},{#TARGET_GROUP_NAME}]</key>
                            <delay>3600</delay>
                            <history>30d</history>
                            <trends>60d</trends>
                            <params>{#TARGET_COUNT}</params>
                            <applications>
                                <application>
                                    <name>ELBv2</name>
                                </application>
                            </applications>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{last()}=-1</expression>
                                    <name>ELBv2: No data points for {#TARGET_GROUP_LOAD_BALANCER_NAME} target {#TARGET_GROUP_NAME}</name>
                                    <priority>INFO</priority>
                                    <description>1. Your item is incorrectly configured (dimension, namespace, metric name could be wrong)&#13;
                                2. Instance was terminated and this item will disappear after next discovery</description>
                                </trigger_prototype>
                                <trigger_prototype>
                                    <expression>{last()}=0</expression>
                                    <name>ELBv2: {#TARGET_GROUP_LOAD_BALANCER_NAME} target group {#TARGET_GROUP_NAME} has no active instances</name>
                                    <priority>INFO</priority>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                    </item_prototypes>
                    <graph_prototypes>
                        <graph_prototype>
                            <name>ELBv2 {#TARGET_GROUP_LOAD_BALANCER_NAME} {#TARGET_GROUP_NAME} UnHealthyHostCount</name>
                            <graph_items>
                                <graph_item>
                                    <color>1A7C11</color>
                                    <item>
                                        <host>Cloudwatch Template</host>
                                        <key>cloudwatch.metric[120,UnHealthyHostCount,AWS/ApplicationELB,Maximum,{$REGION},&quot;LoadBalancer={#TARGET_GROUP_LOAD_BALANCER_ARN},TargetGroup={#TARGET_GROUP_ARN}&quot;,{$ACCOUNT}]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                    </graph_prototypes>
                </discovery_rule>
                <discovery_rule>
                    <name>EMR discovery</name>
                    <type>EXTERNAL</type>
                    <key>aws.discovery[emr,{$REGION},{$ACCOUNT}]</key>
                    <delay>3600</delay>
                    <lifetime>0</lifetime>
                    <item_prototypes>
                        <item_prototype>
                            <name>{#CLUSTER_NAME} failed apps</name>
                            <type>EXTERNAL</type>
                            <key>cloudwatch.metric[600,AppsFailed,AWS/ElasticMapReduce,Average,{$REGION},JobFlowId={#CLUSTER_ID},{$ACCOUNT}]</key>
                            <delay>300</delay>
                            <history>30d</history>
                            <value_type>FLOAT</value_type>
                            <units>app(s)</units>
                            <applications>
                                <application>
                                    <name>EMR</name>
                                </application>
                            </applications>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>(({TRIGGER.VALUE}=0 and {last()}&gt;0 and {change()}&gt;0) or ({TRIGGER.VALUE}=1 and {delta(#4)}&gt;0))</expression>
                                    <name>EMR: {#CLUSTER_NAME} has new failed YARN apps</name>
                                    <priority>HIGH</priority>
                                    <description>{ITEM.VALUE}</description>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>{#CLUSTER_NAME} HDFS utilization</name>
                            <type>EXTERNAL</type>
                            <key>cloudwatch.metric[600,HDFSUtilization,AWS/ElasticMapReduce,Average,{$REGION},JobFlowId={#CLUSTER_ID},{$ACCOUNT}]</key>
                            <delay>300</delay>
                            <history>30d</history>
                            <value_type>FLOAT</value_type>
                            <units>%</units>
                            <applications>
                                <application>
                                    <name>EMR</name>
                                </application>
                            </applications>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{avg(#2)}&gt;80</expression>
                                    <name>EMR: {#CLUSTER_NAME} high HDFS usage</name>
                                    <priority>HIGH</priority>
                                    <description>{ITEM.VALUE}</description>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>{#CLUSTER_NAME} unhealthy nodes</name>
                            <type>EXTERNAL</type>
                            <key>cloudwatch.metric[600,MRUnhealthyNodes,AWS/ElasticMapReduce,Average,{$REGION},JobFlowId={#CLUSTER_ID},{$ACCOUNT}]</key>
                            <delay>300</delay>
                            <history>30d</history>
                            <value_type>FLOAT</value_type>
                            <units>node(s)</units>
                            <applications>
                                <application>
                                    <name>EMR</name>
                                </application>
                            </applications>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{last()}&gt;0</expression>
                                    <name>EMR: Unhealthy nodes in {#CLUSTER_NAME}</name>
                                    <priority>DISASTER</priority>
                                    <description>{ITEM.VALUE}</description>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                    </item_prototypes>
                    <trigger_prototypes>
                        <trigger_prototype>
                            <expression>{Cloudwatch Template:cloudwatch.metric[600,HDFSUtilization,AWS/ElasticMapReduce,Average,{$REGION},JobFlowId={#CLUSTER_ID},{$ACCOUNT}].last()}=-1 or {Cloudwatch Template:cloudwatch.metric[600,MRUnhealthyNodes,AWS/ElasticMapReduce,Average,{$REGION},JobFlowId={#CLUSTER_ID},{$ACCOUNT}].last()}=-1</expression>
                            <name>EMR: {#CLUSTER_NAME} has no datapoints</name>
                            <priority>INFO</priority>
                            <description>1. Your item is incorrectly configured (dimension, namespace, metric name could be wrong)&#13;
                                2. Instance was terminated and this item will disappear after next discovery</description>
                        </trigger_prototype>
                    </trigger_prototypes>
                </discovery_rule>
                <discovery_rule>
                    <name>Lambda Discovery</name>
                    <type>EXTERNAL</type>
                    <key>aws.discovery[lambda,{$REGION},{$ACCOUNT}]</key>
                    <delay>3600</delay>
                    <lifetime>0</lifetime>
                    <description>AWS Lambda discovery rules.</description>
                    <item_prototypes>
                        <item_prototype>
                            <name>{#LAMBDA_FUNCTION_NAME} errors</name>
                            <type>EXTERNAL</type>
                            <key>cloudwatch.metric[300,Errors,AWS/Lambda,Sum,{$REGION},FunctionName={#LAMBDA_FUNCTION_NAME},{$ACCOUNT}]</key>
                            <delay>300s</delay>
                            <history>30d</history>
                            <applications>
                                <application>
                                    <name>Lambda</name>
                                </application>
                            </applications>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{last()}&gt;0</expression>
                                    <name>{#LAMBDA_FUNCTION_NAME} has errors</name>
                                    <priority>AVERAGE</priority>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>{#LAMBDA_FUNCTION_NAME} invocations</name>
                            <type>EXTERNAL</type>
                            <key>cloudwatch.metric[300,Invocations,AWS/Lambda,Average,{$REGION},FunctionName={#LAMBDA_FUNCTION_NAME},{$ACCOUNT}]</key>
                            <delay>300s</delay>
                            <history>30d</history>
                            <applications>
                                <application>
                                    <name>Lambda</name>
                                </application>
                            </applications>
                        </item_prototype>
                        <item_prototype>
                            <name>{#LAMBDA_FUNCTION_NAME} throttles</name>
                            <type>EXTERNAL</type>
                            <key>cloudwatch.metric[300,Throttles,AWS/Lambda,Sum,{$REGION},FunctionName={#LAMBDA_FUNCTION_NAME},{$ACCOUNT}]</key>
                            <delay>300s</delay>
                            <history>30d</history>
                            <applications>
                                <application>
                                    <name>Lambda</name>
                                </application>
                            </applications>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{last()}&gt;0</expression>
                                    <name>{#LAMBDA_FUNCTION_NAME} is being throttled</name>
                                    <priority>WARNING</priority>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                    </item_prototypes>
                </discovery_rule>
                <discovery_rule>
                    <name>RDS discovery</name>
                    <type>EXTERNAL</type>
                    <key>aws.discovery[rds,{$REGION},{$ACCOUNT}]</key>
                    <delay>3600;3600/1-5,00:00-24:00;21600/6-7,00:00-24:00</delay>
                    <lifetime>0</lifetime>
                    <item_prototypes>
                        <item_prototype>
                            <name>{#RDS_ID} CPU usage</name>
                            <type>EXTERNAL</type>
                            <key>cloudwatch.metric[600,CPUUtilization,AWS/RDS,Average,{$REGION},DBInstanceIdentifier={#RDS_ID},{$ACCOUNT}]</key>
                            <delay>600</delay>
                            <value_type>FLOAT</value_type>
                            <units>%</units>
                            <applications>
                                <application>
                                    <name>RDS CPU</name>
                                </application>
                            </applications>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{avg(#2)}&gt;80</expression>
                                    <name>RDS: {#RDS_ID} high CPU usage</name>
                                    <priority>HIGH</priority>
                                    <description>{ITEM.VALUE}</description>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>{#RDS_ID} free storage space</name>
                            <type>EXTERNAL</type>
                            <key>cloudwatch.metric[600,FreeStorageSpace,AWS/RDS,Average,{$REGION},DBInstanceIdentifier={#RDS_ID},{$ACCOUNT}]</key>
                            <delay>600</delay>
                            <units>B</units>
                            <applications>
                                <application>
                                    <name>RDS Storage</name>
                                </application>
                            </applications>
                        </item_prototype>
                        <item_prototype>
                            <name>{#RDS_ID} % free storage space</name>
                            <type>CALCULATED</type>
                            <key>freepercent[{#RDS_ID}]</key>
                            <delay>600</delay>
                            <value_type>FLOAT</value_type>
                            <units>%</units>
                            <params>last(&quot;cloudwatch.metric[600,FreeStorageSpace,AWS/RDS,Average,{$REGION},DBInstanceIdentifier={#RDS_ID},{$ACCOUNT}]&quot;)/({#STORAGE}/100)</params>
                            <applications>
                                <application>
                                    <name>RDS Storage</name>
                                </application>
                            </applications>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{last()}&lt;20</expression>
                                    <name>RDS: {#RDS_ID} low on space</name>
                                    <priority>HIGH</priority>
                                    <description>{ITEM.VALUE} left</description>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                    </item_prototypes>
                    <trigger_prototypes>
                        <trigger_prototype>
                            <expression>{Cloudwatch Template:cloudwatch.metric[600,CPUUtilization,AWS/RDS,Average,{$REGION},DBInstanceIdentifier={#RDS_ID},{$ACCOUNT}].last()}=-1 or {Cloudwatch Template:cloudwatch.metric[600,FreeStorageSpace,AWS/RDS,Average,{$REGION},DBInstanceIdentifier={#RDS_ID},{$ACCOUNT}].last()}=-1</expression>
                            <name>RDS: {#RDS_ID} has no datapoints</name>
                            <priority>INFO</priority>
                            <description>1. Your item is incorrectly configured (dimension, namespace, metric name could be wrong)&#13;
                                2. Instance was terminated and this item will disappear after next discovery</description>
                        </trigger_prototype>
                    </trigger_prototypes>
                    <graph_prototypes>
                        <graph_prototype>
                            <name>{#RDS_ID} free storage space</name>
                            <height>300</height>
                            <graph_items>
                                <graph_item>
                                    <color>1A7C11</color>
                                    <item>
                                        <host>Cloudwatch Template</host>
                                        <key>cloudwatch.metric[600,FreeStorageSpace,AWS/RDS,Average,{$REGION},DBInstanceIdentifier={#RDS_ID},{$ACCOUNT}]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                    </graph_prototypes>
                </discovery_rule>
                <discovery_rule>
                    <name>S3 discovery</name>
                    <type>EXTERNAL</type>
                    <key>aws.discovery[s3,{$REGION},{$ACCOUNT}]</key>
                    <delay>3600</delay>
                    <lifetime>0</lifetime>
                    <item_prototypes>
                        <item_prototype>
                            <name>{#BUCKET_NAME} Bucket Size</name>
                            <type>EXTERNAL</type>
                            <key>cloudwatch.metric[600,BucketSizeBytes,AWS/S3,Average,{$REGION},&quot;BucketName={#BUCKET_NAME},StorageType=StandardStorage&quot;,{$ACCOUNT},172800]</key>
                            <delay>600</delay>
                            <value_type>FLOAT</value_type>
                            <units>Bytes</units>
                            <applications>
                                <application>
                                    <name>S3</name>
                                </application>
                            </applications>
                        </item_prototype>
                        <item_prototype>
                            <name>{#BUCKET_NAME} Number Of Objects</name>
                            <type>EXTERNAL</type>
                            <key>cloudwatch.metric[600,NumberOfObjects,AWS/S3,Average,{$REGION},&quot;BucketName={#BUCKET_NAME},StorageType=AllStorageTypes&quot;,{$ACCOUNT},172800]</key>
                            <delay>600</delay>
                            <value_type>FLOAT</value_type>
                            <units>Objects</units>
                            <applications>
                                <application>
                                    <name>S3</name>
                                </application>
                            </applications>
                        </item_prototype>
                    </item_prototypes>
                    <trigger_prototypes>
                        <trigger_prototype>
                            <expression>{Cloudwatch Template:cloudwatch.metric[600,BucketSizeBytes,AWS/S3,Average,{$REGION},&quot;BucketName={#BUCKET_NAME},StorageType=StandardStorage&quot;,{$ACCOUNT},172800].last()}=-1 or {Cloudwatch Template:cloudwatch.metric[600,NumberOfObjects,AWS/S3,Average,{$REGION},&quot;BucketName={#BUCKET_NAME},StorageType=AllStorageTypes&quot;,{$ACCOUNT},172800].last()}=-1</expression>
                            <name>S3: {#BUCKET_NAME} has no datapoints</name>
                            <priority>INFO</priority>
                            <description>1. Your item is incorrectly configured (dimension, namespace, metric name could be wrong)&#13;
                                2. Instance was terminated and this item will disappear after next discovery</description>
                        </trigger_prototype>
                    </trigger_prototypes>
                    <graph_prototypes>
                        <graph_prototype>
                            <name>{#BUCKET_NAME} Bucket Size</name>
                            <graph_items>
                                <graph_item>
                                    <color>1A7C11</color>
                                    <item>
                                        <host>Cloudwatch Template</host>
                                        <key>cloudwatch.metric[600,BucketSizeBytes,AWS/S3,Average,{$REGION},&quot;BucketName={#BUCKET_NAME},StorageType=StandardStorage&quot;,{$ACCOUNT},172800]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                        <graph_prototype>
                            <name>{#BUCKET_NAME} Number of Objects</name>
                            <graph_items>
                                <graph_item>
                                    <color>1A7C11</color>
                                    <item>
                                        <host>Cloudwatch Template</host>
                                        <key>cloudwatch.metric[600,NumberOfObjects,AWS/S3,Average,{$REGION},&quot;BucketName={#BUCKET_NAME},StorageType=AllStorageTypes&quot;,{$ACCOUNT},172800]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                    </graph_prototypes>
                </discovery_rule>
            </discovery_rules>
            <macros>
                <macro>
                    <macro>{$ACCOUNT}</macro>
                </macro>
                <macro>
                    <macro>{$REGION}</macro>
                </macro>
            </macros>
        </template>
    </templates>
</zabbix_export>
